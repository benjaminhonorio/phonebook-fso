{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","services/person.js","App.js","index.js"],"names":["Filter","handleSearch","searchValue","onChange","value","PersonForm","addNewPerson","handleName","handleNumber","newName","newNumber","onSubmit","type","Person","person","deletePerson","name","number","onClick","Persons","persons","handleDelete","length","map","id","Notification","message","className","content","baseUrl","personServices","getAll","axios","get","then","response","data","create","newPerson","post","delete","update","newObject","put","App","useState","filteredPeople","setFilteredPeople","allPeople","setAllPeople","setNewName","setNewNumber","setSearchValue","setMessage","useEffect","initialPeople","event","searchInput","target","lookupText","RegExp","justFilteredPeople","filter","test","preventDefault","filteredPerson","returnedPerson","concat","setTimeout","window","confirm","changedPerson","updatedPeople","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c019319.chunk.js","sourcesContent":["const Filter = ({ handleSearch, searchValue }) => {\r\n  return (\r\n    <div>\r\n      filter shown with <input onChange={handleSearch} value={searchValue} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","const PersonForm = ({\r\n  addNewPerson,\r\n  handleName,\r\n  handleNumber,\r\n  newName,\r\n  newNumber,\r\n}) => {\r\n  return (\r\n    <form onSubmit={addNewPerson}>\r\n      <div>\r\n        name: <input onChange={handleName} value={newName} />\r\n      </div>\r\n      <div>\r\n        number: <input onChange={handleNumber} value={newNumber} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","export default function Person({ person, deletePerson }) {\r\n  return (\r\n    <div>\r\n      {person.name} {person.number}{\" \"}\r\n      <button onClick={deletePerson}>delete</button>\r\n    </div>\r\n  );\r\n}\r\n","import Person from \"./Person\";\r\n\r\nconst Persons = ({ persons, handleDelete }) => {\r\n  return persons.length !== 0 ? (\r\n    persons.map((person) => {\r\n      return (\r\n        <Person\r\n          key={person.id}\r\n          person={person}\r\n          deletePerson={() => handleDelete(person.id, person.name)}\r\n        />\r\n      );\r\n    })\r\n  ) : (\r\n    <div>No names found</div>\r\n  );\r\n};\r\nexport default Persons;\r\n","export default function Notification({ message }) {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n  return <div className={`message ${message.type}`}>{message.content}</div>;\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newPerson) => {\r\n  const request = axios.post(baseUrl, newPerson);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst deletePerson = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst personServices = {\r\n  getAll,\r\n  create,\r\n  deletePerson,\r\n  update,\r\n};\r\n\r\nexport default personServices;\r\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport Notification from \"./components/Notification\";\nimport personServices from \"./services/person\";\n\nconst App = () => {\n  const [filteredPeople, setFilteredPeople] = useState([]);\n  const [allPeople, setAllPeople] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  const hook = () => {\n    personServices.getAll().then((initialPeople) => {\n      setAllPeople(initialPeople);\n      setFilteredPeople(initialPeople);\n    });\n  };\n  useEffect(hook, []);\n\n  const addNewPerson = (event) => {\n    event.preventDefault();\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    };\n    const filteredPerson = allPeople.filter(\n      (person) => person.name === newName\n    );\n    if (filteredPerson.length === 0) {\n      personServices.create(newPerson).then((returnedPerson) => {\n        setFilteredPeople(filteredPeople.concat(returnedPerson));\n        setAllPeople(allPeople.concat(returnedPerson));\n        setMessage({\n          type: \"success\",\n          content: `Added ${returnedPerson.name}`,\n        });\n        setTimeout(() => {\n          setMessage(null);\n        }, 4000);\n      });\n    } else {\n      const confirmUpdate = window.confirm(\n        `${newName} is already added to phonebook, replace the old number with the new one?`\n      );\n      if (confirmUpdate) {\n        const changedPerson = { ...filteredPerson[0], number: newNumber };\n        personServices\n          .update(filteredPerson[0].id, changedPerson)\n          .then((returnedPerson) => {\n            const updatedPeople = allPeople.map((person) =>\n              person.id !== filteredPerson[0].id ? person : returnedPerson\n            );\n            setAllPeople(updatedPeople);\n            setFilteredPeople(updatedPeople);\n            setMessage({\n              type: \"success\",\n              content: `The number of ${returnedPerson.name} was updated successfully`,\n            });\n            setTimeout(() => {\n              setMessage(null);\n            }, 4000);\n          })\n          .catch((error) => {\n            setMessage({\n              type: \"error\",\n              content: `Information of ${newName} has already been removed from server`,\n            });\n            setTimeout(() => {\n              setMessage(null);\n            }, 4000);\n          });\n      }\n    }\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const handleDelete = (id, person) => {\n    const confirmDelete = window.confirm(\n      \"Are you sure you want to delete this person?\"\n    );\n    if (confirmDelete) {\n      personServices.deletePerson(id).catch((error) => {\n        setMessage({\n          type: \"error\",\n          content: `Information of ${person} has already been removed from server`,\n        });\n        setTimeout(() => {\n          setMessage(null);\n        }, 4000);\n      });\n      setFilteredPeople(allPeople.filter((person) => person.id !== id));\n      setAllPeople(allPeople.filter((person) => person.id !== id));\n      setSearchValue(\"\");\n    }\n  };\n\n  const handleName = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumber = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearch = (event) => {\n    const searchInput = event.target.value;\n    setSearchValue(searchInput);\n    if (searchInput) {\n      let lookupText = new RegExp(searchInput, \"i\");\n      let justFilteredPeople = allPeople.filter((person) =>\n        lookupText.test(person.name)\n      );\n      filteredPeople.length !== 0\n        ? setFilteredPeople(justFilteredPeople)\n        : setFilteredPeople([]);\n    } else {\n      setFilteredPeople(allPeople);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter handleSearch={handleSearch} searchValue={searchValue} />\n      <h3>add a new</h3>\n      <PersonForm\n        addNewPerson={addNewPerson}\n        handleName={handleName}\n        handleNumber={handleNumber}\n        newName={newName}\n        newNumber={newNumber}\n      />\n      <h3>Numbers</h3>\n      <Persons persons={filteredPeople} handleDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}